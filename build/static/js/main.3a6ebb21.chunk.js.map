{"version":3,"sources":["components/pages/Login/Login.jsx","components/pages/Login/index.js","actions/userActions.js","components/parts/Search/Search.jsx","components/parts/Search/index.js","components/parts/Header/index.js","components/parts/Header/Header.jsx","components/parts/Footer/Footer.jsx","components/parts/Menu/Menu.jsx","components/parts/Menu/index.js","components/parts/Main/Main.jsx","components/pages/Index/Index.jsx","components/pages/Register/index.js","components/pages/Register/Register.jsx","costants/questionConst.js","actions/questionActions.js","components/pages/FreeHelp/FreeHelp.jsx","components/pages/FreeHelp/index.js","components/pages/UserProfile/UserProfile.jsx","components/pages/UserProfile/index.js","components/pages/News/News.jsx","components/pages/News/index.js","components/pages/FreeQuestion/FreeQuestion.jsx","components/pages/Settings/Settings.jsx","App.js","reducers/userReducers.js","store.js","reducers/questionReducers.js","index.js","costants/userConst.js"],"names":["Copyright","Typography","variant","color","align","to","Link","Date","getFullYear","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","form","width","marginTop","submit","Login","props","classes","useState","userEmail","setUserEmail","userPassword","setUserPassword","userLogin","useSelector","state","userInfo","loading","dispatch","error","useDispatch","useEffect","history","push","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","onSubmit","e","preventDefault","a","LOGIN_USER_REQUEST","payload","axios","post","data","console","log","token","LOGIN_USER_SUCCESS","cookie","set","JSON","stringify","LOGIN_USER_FAIL","message","loginUser","noValidate","TextField","required","fullWidth","id","onChange","target","value","label","name","autoComplete","autoFocus","FormControlLabel","control","Checkbox","Button","href","Box","mt","Search","IconButton","fontSize","Header","notifications","setNotifications","onClick","match","params","Cookie","userName","Footer","blue","SimpleDialog","onClose","selectedValue","open","handleListItemClick","Dialog","aria-labelledby","DialogTitle","List","ListItem","button","ListItemAvatar","ListItemText","primary","React","setOpen","setSelectedValue","Menu","activeClassName","exact","Main","Index","useCookies","Register","setUserName","userSurname","setUserSurname","isRegisterDisabled","setRegisterStatus","Container","maxWidth","inputProps","maxLength","disabled","then","res","status","catch","response","justify","QUESTION_LIST_SUCCESS","QUESTION_LIST_REQUEST","QUESTION_LIST_FAIL","QUESTION_DETAILS_SUCCESS","QUESTION_DETAILS_REQUEST","QUESTION_DETAILS_FAIL","listQuestions","sort","page","get","FreeHelp","values","queryString","parse","location","search","Number","setPage","questionList","questions","count","tags","countPages","Math","ceil","handleSelectPage","event","tagsByUn","setTagsByUn","BSUIR","BSU","BSMU","BSEU","BSATU","universityState","setUniversityState","viewTagsByUniversity","prevState","FormControl","InputLabel","htmlFor","Select","sortSelectHandler","defaultValue","MenuItem","ListSubheader","Fragment","Skeleton","style","animation","map","i","_id","answers","length","rate","subscribers","title","index","timestamp","creator","justifyContent","borderRadius","Pagination","showFirstButton","showLastButton","innerHTML","UserProfile","fav","setFav","blocked","setBlocked","reported","setReported","setData","setTimeout","position","marginLeft","alt","src","isPrivate","university","isAuth","marginRight","News","FreeQuestion","favorite","setFavorite","good","setGood","bad","setBad","report","setReport","checked","setChecked","questionDetails","question","questionId","rows","Settings","localStorage","getItem","toggleChecked","setItem","Tooltip","disableFocusListener","arrow","Switch","size","App","customHistory","createBrowserHistory","path","RegisterPage","require","getJSON","initialState","reducer","combineReducers","action","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a6ebb21.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {Avatar, Button} from '@material-ui/core/';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport LinkUI from '@material-ui/core/Link';\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {useCookies} from 'react-cookie'\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginUser } from '../../../actions/userActions';\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link to=\"/\">\r\n      <LinkUI color=\"inherit\">\r\n        Vataga.by\r\n      </LinkUI></Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    // backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundImage: 'url(/Studyonline.svg)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#656565\",\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignInSide(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [userEmail, setUserEmail] = useState('')\r\n  const [userPassword, setUserPassword] = useState('')\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const {loading, userInfo, error} = userLogin\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      props.history.push('/')\r\n    }\r\n  }, [userInfo])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(loginUser(userEmail, userPassword))\r\n  }\r\n\r\n  // const userLogin = () => {\r\n  //     axios.post('/login', {\r\n  //       userEmail,\r\n  //       userPassword\r\n  //     })\r\n  //     .then((res) => setCookie('auth', `Bearer ${res.data.token}`, {path:\"/\", maxAge: 10000000}))\r\n  //     .catch((error) => {\r\n  //       console.log(error.response)\r\n  //       if(error.response) {\r\n  //         if (error.response.status && error.response.status == 400) console.log(\"Неверный почтовый адрес или пароль\")\r\n  //       }\r\n  //         else console.log(error)\r\n  //     })\r\n  // }\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Авторизация\r\n          </Typography>\r\n          <form onSubmit={submitHandler} className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              onChange={(e) => setUserEmail(e.target.value)}\r\n              label=\"Адрес электронной почты\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              onChange={(e) => setUserPassword(e.target.value)}\r\n              label=\"Пароль\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value='remember' />}\r\n              label=\"Запомнить меня\"\r\n            />\r\n            <Button\r\n              fullWidth\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Авторизоваться\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <LinkUI href=\"#\" variant=\"body2\">\r\n                  Забыли пароль?\r\n                </LinkUI>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link to=\"/register\" >\r\n                  <LinkUI variant=\"body2\">{\"Всё ещё нет аккаунта? Зарегистрируйтесь!\"}</LinkUI>\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}","import Login from './Login'\r\n\r\nexport default Login","import axios from \"axios\"\r\nimport cookie from \"js-cookie\"\r\nimport { LOGIN_USER_FAIL, LOGIN_USER_REQUEST, LOGIN_USER_SUCCESS } from \"../costants/userConst\"\r\n\r\nconst loginUser = (userEmail, userPassword) => async (dispatch) => {\r\n    dispatch({ type: LOGIN_USER_REQUEST, payload: {userEmail, userPassword} })\r\n    try {\r\n        const { data } = await axios.post('http://localhost:3001/login', {userEmail, userPassword})\r\n        console.log(data.token)\r\n        dispatch({ type: LOGIN_USER_SUCCESS, payload: data })\r\n        cookie.set('userInfo', JSON.stringify(data) )\r\n    } catch (error) {\r\n        dispatch({type: LOGIN_USER_FAIL, payload: error.message})\r\n    }\r\n}\r\n\r\nexport {loginUser}","import React from 'react'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\n\r\nimport './Search.scss'\r\n\r\n\r\nfunction Search() {\r\n    return (\r\n        <div className=\"search\">\r\n\r\n            <input className=\"search-form\" />\r\n            <IconButton className='search-icon'>\r\n                        <SearchIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import Search from './Search'\r\n\r\nexport default Search","import Header from './Header'\r\n\r\nexport default Header","import React, { useEffect, useState } from 'react'\r\nimport { Link, BrowserRouter as Router } from 'react-router-dom'\r\nimport Search from '../Search'\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport NotificationImportantIcon from '@material-ui/icons/NotificationImportant';\r\nimport Cookie from 'js-cookie'\r\n\r\nimport './Header.scss'\r\nimport { Button } from '@material-ui/core'\r\nimport { useSelector } from 'react-redux';\r\nconst Header = (props) => {\r\n    const userLogout =() => {\r\n        Cookie.set('userInfo', null)\r\n        \r\n        props.props.history.push('/')\r\n    }\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n  const {userInfo} = userLogin\r\n    const [notifications, setNotifications ] = useState(false)\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <header>\r\n                <div className=\"header-left\">\r\n                    <div className=\"logo\">\r\n                        <Link to='/'>\r\n                            <h1>Vataga.by</h1>\r\n                        </Link>\r\n                    </div>\r\n                    <Search />\r\n                </div>\r\n                <div className=\"header-right\">\r\n                    <IconButton onClick={() => setNotifications(!notifications)}>\r\n                        {!notifications ?\r\n                        <NotificationsIcon/> :\r\n                        <NotificationImportantIcon /> }\r\n                    </IconButton>\r\n                    {\r\n                    userInfo && props.props && userInfo.id == props.props.match.params.id ?\r\n                    <Button onClick={() => userLogout()}>\r\n                        Выйти\r\n                    </Button>\r\n                    :\r\n                    userInfo ?\r\n                    <Link id='isLoged' to={`/profile/${userInfo.id}`}>\r\n                        <Button>\r\n                            {userInfo.userName}\r\n                        </Button>\r\n                    </Link>\r\n                    :\r\n                    <Link id='isLoged' to='/login'>\r\n                        <Button>\r\n                            ВОЙТИ\r\n                        </Button>\r\n                    </Link>}\r\n                </div>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import { Button, Dialog } from '@material-ui/core'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue, black } from '@material-ui/core/colors'\r\n\r\nconst Footer = (props) => {\r\n  const emails = ['username@gmail.com', 'user02@gmail.com'];\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  },\r\n});\r\n\r\nfunction SimpleDialog(props) {\r\n  const classes = useStyles();\r\n  const { onClose, selectedValue, open } = props;\r\n\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  const handleListItemClick = (value) => {\r\n    onClose(value);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle color={'black'} id=\"simple-dialog-title\">Пожалуйста, выберите с какой проблемой вам пришлось встретиться</DialogTitle>\r\n      <List>\r\n      <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <AddIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Проблема с авторизацией\" />\r\n        </ListItem>\r\n      <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <AddIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Проблема с аккаунтом\" />\r\n        </ListItem>\r\n      <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <AddIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Проблема с балансом\" />\r\n        </ListItem>\r\n      <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <AddIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Проблема с интерфейсом\" />\r\n        </ListItem>\r\n        <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <AddIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Другая проблема\" />\r\n        </ListItem>\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  selectedValue: PropTypes.string.isRequired,\r\n};\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n    setSelectedValue(value);\r\n  };\r\n\r\n    return (\r\n        <footer>\r\n      <div className=\"footer-left\">\r\n      <Button onClick={handleClickOpen}>\r\n      Сообщить об ошибке\r\n      </Button>\r\n      <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\r\n      </div>\r\n      <div className=\"footer-right\">\r\n\r\n      </div>\r\n    </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { BrowserRouter as Router, Route, Link, NavLink } from 'react-router-dom'\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <menu>\r\n            <nav>\r\n                <ul>\r\n                    \r\n                    <NavLink activeClassName='activeLink' exact to=\"/free-help\">\r\n                    <Button><li>Бесплатная помощь</li></Button>\r\n                    </NavLink>\r\n                    \r\n                    <NavLink activeClassName='activeLink' to=\"/paid-help\">\r\n                    <Button><li>Платная помощь</li></Button>\r\n                    </NavLink>\r\n                    \r\n                    <NavLink activeClassName='activeLink' to=\"/news\">\r\n                    <Button><li>Новости</li></Button>\r\n                    </NavLink>\r\n                    \r\n                    <NavLink activeClassName='activeLink' to=\"/flea-market\">\r\n                    <Button><li>Барахолка</li></Button>\r\n                    </NavLink>\r\n                    \r\n                    <NavLink activeClassName='activeLink' to=\"/library\">\r\n                    <Button><li>Библиотека файлов</li></Button>\r\n                    </NavLink>\r\n                    \r\n                    \r\n                    <NavLink activeClassName='activeLink' to=\"/users/profile/1\">\r\n                    <Button><li>Профиль</li></Button>\r\n                    </NavLink>\r\n                    \r\n                    \r\n                    <NavLink activeClassName='activeLink' to=\"/settings\">\r\n                    <Button><li>Настройки</li></Button>\r\n                    </NavLink>\r\n                    \r\n                    \r\n                </ul>\r\n            </nav>\r\n        </menu>\r\n    )\r\n}\r\n\r\nexport default Menu","import Menu from './Menu'\r\n\r\nexport default Menu","import React from 'react'\r\nimport Menu from '../Menu/'\r\n\r\nconst Main = () => {\r\n    return (\r\n        <main>\r\n            <Menu/>\r\n      <div className=\"content\">\r\n      {/* <div className=\"content-element\">\r\n\r\n      </div>\r\n      <div className=\"content-element\">\r\n        \r\n      </div>\r\n      <div className=\"content-element\">\r\n        \r\n      </div>\r\n      <div className=\"content-element\">\r\n        \r\n      </div>\r\n      <div className=\"content-element\">\r\n        \r\n      </div>\r\n      <div className=\"content-element\">\r\n        \r\n      </div>\r\n      <div className=\"content-element\">\r\n        \r\n      </div>\r\n      <div className=\"content-element\">\r\n        \r\n      </div>\r\n      <div className=\"content-element\">\r\n        \r\n      </div>\r\n      <div className=\"content-element\">\r\n        \r\n      </div> */}\r\n    </div>\r\n    </main>\r\n    )\r\n}\r\n\r\nexport default Main","import React, { useEffect } from 'react';\r\nimport Header from '../../parts/Header'\r\nimport Footer from '../../parts/Footer/Footer'\r\nimport Main from '../../parts/Main/Main'\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\r\n\r\nimport './Index.scss'\r\nimport axios from 'axios';\r\nimport { useCookies } from 'react-cookie';\r\n\r\nconst Index = (props) => {\r\n  const [cookies, setCookie, removeCookie] = useCookies(['auth']);\r\n\r\n\r\n    // useEffect(() => {\r\n    //   axios.get('http://localhost:3001/', {withCredentials: true})\r\n    //   .then((res) => {\r\n    //     if ( res.data.message == \"Token is not supplied.\") {\r\n    //       console.log(\"Авторизационного токена не обнаружено. Авторизуйтесь, чтобы продолжиь использование сайта.\")\r\n    //     } else if ( res.data.message == \"Invalid Token\") {\r\n    //       console.log(\"Ваш Авторизационный токен больше не поддерживается. Повторите процесс авторизации.\")\r\n    //     }\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     if (error.response.data.message = \"Token is not supplied.\") {\r\n    //       alert('У вас нет доступа к этой странице')\r\n    //     }\r\n    //   })\r\n    // })\r\n\r\n    return (\r\n        <div className=\"index-page\">\r\n        <Header/>\r\n        <Main/>\r\n        <Footer/>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Index","import Register from './Register' \r\n\r\nexport default Register","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport LinkUI from '@material-ui/core/Link';\r\nimport {Link} from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepButton from '@material-ui/core/StepButton';\r\nimport Box from '@material-ui/core/Box';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios';\r\n\r\nimport './Register.scss'\r\n\r\nexport default function SignUp() {\r\n  const [userName, setUserName] = useState('')\r\n  const [userSurname, setUserSurname] = useState('')\r\n  const [userEmail, setUserEmail] = useState('')\r\n  const [userPassword, setUserPassword] = useState('')\r\n  const [isRegisterDisabled, setRegisterStatus] = useState(true)\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: '#656565',\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n  \r\n  const classes = useStyles();\r\n  \r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link to='/'>\r\n      <LinkUI color=\"inherit\">\r\n        Vataga.by\r\n      </LinkUI></Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n  const userRegister = () => {\r\n    axios.post('http://localhost:3001/register', {\r\n      userName,\r\n      userSurname,\r\n      userPassword,\r\n      userEmail\r\n    }).then(res => {\r\n      console.log(res)\r\n        if (res.status == 200) console.log(res.data.message)\r\n    })\r\n    .catch(error => {\r\n      console.log(error.response)\r\n      if (error.response.data = \"User is already exist\") console.log('Пользователь с такой почтой уже существует')\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" className='register-page'>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <CreateIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Регистрация\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                inputProps={{maxLength: 20}}\r\n                onChange={(e) => setUserName(e.target.value)}\r\n                id=\"firstName\"\r\n                label=\"Имя\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                inputProps={{maxLength: 20}}\r\n                onChange={(e) => setUserSurname(e.target.value)}\r\n                label=\"Фамилия\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                onChange={(e) => setUserEmail(e.target.value)}\r\n                label=\"Адрес электронной почты\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Пароль\"\r\n                onChange={(e) => setUserPassword(e.target.value)}\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"Я хочу получать новостную рассылку от веб-портала Vataga.by\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" onClick={() => setRegisterStatus(!isRegisterDisabled)} required={true}/>}\r\n                label=\"Я полностью согласен с правилами сообщества\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            disabled={isRegisterDisabled}\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={() => userRegister()}\r\n          >\r\n            Зарегистрироваться\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n                <Link to=\"/login\">\r\n              <LinkUI variant=\"body2\">\r\n                Уже есть аккаунт? Авторизуйтесь!\r\n              </LinkUI>\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","export const QUESTION_LIST_SUCCESS = \"QUESTION_LIST_SUCCESS\"\r\nexport const QUESTION_LIST_REQUEST = \"QUESTION_LIST_REQUEST\"\r\nexport const QUESTION_LIST_FAIL = \"QUESTION_LIST_FAIL\"\r\n\r\nexport const QUESTION_DETAILS_SUCCESS = \"QUESTION_DETAILS_SUCCESS\"\r\nexport const QUESTION_DETAILS_REQUEST = \"QUESTION_DETAILS_REQUEST\"\r\nexport const QUESTION_DETAILS_FAIL = \"QUESTION_DETAILS_FAIL\"","import axios from \"axios\"\r\nimport { QUESTION_DETAILS_FAIL, QUESTION_DETAILS_REQUEST, QUESTION_DETAILS_SUCCESS, QUESTION_LIST_FAIL, QUESTION_LIST_REQUEST, QUESTION_LIST_SUCCESS } from \"../costants/questionConst\"\r\n\r\nconst listQuestions = ({sort, page}) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: QUESTION_LIST_REQUEST })\r\n        console.log(sort)\r\n        const { data } = await axios.get(`/api/questions/?page=${page}&sort=${sort}`)\r\n        console.log(data)\r\n        dispatch({ type: QUESTION_LIST_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({type: QUESTION_LIST_FAIL, payload: error.message})\r\n    }\r\n}\r\n\r\nconst detailsQuestion = (questionId) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: QUESTION_DETAILS_REQUEST, payload: questionId})\r\n        const {data} = await axios.get('/api/question/' + questionId)\r\n        dispatch({type: QUESTION_DETAILS_SUCCESS, payload: data})\r\n    } catch (error) {\r\n        dispatch({type: QUESTION_DETAILS_FAIL, payload: error.message})\r\n    }\r\n}\r\n\r\nexport {listQuestions, detailsQuestion}","import React, { Component, useState, useEffect } from 'react';\r\nimport Header from '../../parts/Header'\r\nimport Menu from '../../parts/Menu/Menu'\r\nimport Footer from '../../parts/Footer/Footer'\r\n\r\nimport './FreeHelp.scss'\r\nimport LinkUI from '@material-ui/core/Link';\r\nimport { Link } from 'react-router-dom';\r\nimport { Avatar, Button, IconButton, Typography } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ToolTip from '@material-ui/core/Tooltip'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listQuestions } from '../../../actions/questionActions'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport queryString from 'query-string'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nfunction FreeHelp(props) {\r\n    // значения sort, page, etc., полученные из поисковой строки\r\n    const values = queryString.parse(props.location.search)\r\n\r\n    const [page, setPage] = useState(Number(values.page) || 1)\r\n    // const [turnOffAnswerInfo, setTurnOffAnswerInfo] = useState(JSON.parse(localStorage.getItem(\"turnOffAnswerInfo\")) || false)\r\n    const questionList = useSelector(state => state.questionList)\r\n    const { questions, count, loading, error, tags } = questionList\r\n    const dispatch = useDispatch()\r\n\r\n    //всего вопросов\r\n    const countPages = Math.ceil(count / 10)\r\n\r\n    useEffect(() => {\r\n        console.log(\"!!!\")\r\n        dispatch(listQuestions(values))\r\n    }, [])\r\n    // переключение страницы \r\n    const handleSelectPage = async (event, value) => {\r\n        setPage(value)\r\n        values.page = value\r\n        \r\n        await props.history.push(`/free-help?page=${value}` + (values.sort ? `&sort=${values.sort}` : ''))\r\n        dispatch(listQuestions(values))\r\n    }\r\n\r\n    const sortSelectHandler =  (e) => {\r\n        values.sort = e\r\n        props.history.push(`/free-help?`+(values.page ? `page=${values.page}&` : '')+(e?`sort=${e}`:''))\r\n        dispatch(listQuestions(values))        \r\n    }\r\n\r\n    const [tagsByUn, setTagsByUn] = useState(false) \r\n    const [universityState, setUniversityState] = useState({\r\n        BSUIR:false, \r\n        BSU: false, \r\n        BSMU: false, \r\n        BSEU: false, \r\n        BSATU: false\r\n    })\r\n    console.log(universityState.BSUIR)\r\n    function viewTagsByUniversity(e) {\r\n        switch (e) {\r\n            case \"БГУИР\": {\r\n                setUniversityState(prevState => ({...prevState, BSUIR: !prevState.BSUIR}))\r\n                break\r\n            }\r\n        }\r\n    }\r\n\r\n    function selectTagsTypeByUniversity() {\r\n        return (\r\n            <div>\r\n                {universityState.BSUIR ? \r\n                <React.Fragment>\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={(e) => viewTagsByUniversity(e.target.innerHTML)}>БГУИР</Button>\r\n                    \r\n                </React.Fragment> : \r\n                <Button variant=\"contained\" color=\"primary\" onClick={(e) => viewTagsByUniversity(e.target.innerHTML)}>БГУИР</Button>}\r\n                <Button variant=\"contained\" color=\"primary\">БГУ</Button>\r\n                <Button variant=\"contained\" color=\"primary\">МГЛУ</Button>\r\n                <Button variant=\"contained\" color=\"primary\">МГМУ</Button>\r\n                <Button variant=\"contained\" color=\"primary\">БГЭУ</Button>\r\n                <Button variant=\"contained\" color=\"primary\">БГАТУ</Button>\r\n            </div>\r\n        )\r\n    }\r\n    return <div className=\"free-help\">\r\n                <Header />\r\n                <div className=\"main\">\r\n                    <Menu />\r\n                    <div className=\"content\">\r\n                        <h2>Пожалуйста, помогайте другим. Затем помогут и вам :)</h2>\r\n                        <p>Сортировать:</p>\r\n                        <FormControl className=\"form-control\">\r\n                            <InputLabel htmlFor=\"grouped-select\">Выберите</InputLabel>\r\n                            <Select onChange={e => sortSelectHandler(e.target.value)} defaultValue=\"\" id=\"grouped-select\">\r\n                                <MenuItem value=\"\">\r\n                                    <em>-- -- --</em>\r\n                                </MenuItem>\r\n                                <ListSubheader>По новизне</ListSubheader>\r\n                                <MenuItem value={1}>Новые</MenuItem>\r\n                                <MenuItem value={2}>Старые</MenuItem>\r\n                                <ListSubheader>По качеству</ListSubheader>\r\n                                <MenuItem value={3}>Хорошие</MenuItem>\r\n                                <MenuItem value={4}>Плохие</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        {loading ? \r\n                            <React.Fragment>\r\n                                <Skeleton style={{width: \"100%\", height: \"100px\"}} animation=\"wave\"/>\r\n                                <Skeleton style={{width: \"100%\", height: \"100px\"}} animation=\"wave\"/>\r\n                                <Skeleton style={{width: \"100%\", height: \"100px\"}} animation=\"wave\"/>\r\n                                <Skeleton style={{width: \"100%\", height: \"100px\"}} animation=\"wave\"/>\r\n                                <Skeleton style={{width: \"100%\", height: \"100px\"}} animation=\"wave\"/>\r\n                                <Skeleton style={{width: \"100%\", height: \"100px\"}} animation=\"wave\"/>\r\n                                <Skeleton style={{width: \"100%\", height: \"100px\"}} animation=\"wave\"/>\r\n                                <Skeleton style={{width: \"100%\", height: \"100px\"}} animation=\"wave\"/>\r\n                                <Skeleton style={{width: \"100%\", height: \"100px\"}} animation=\"wave\"/>\r\n                                <Skeleton style={{width: \"100%\", height: \"100px\"}} animation=\"wave\"/>\r\n                            </React.Fragment>\r\n                        :\r\n                        error ? \r\n                        <React.Fragment>\r\n                            <br></br>\r\n                            <h4>{error} :( <br></br>Попробуйте перезагрузить страницу</h4>\r\n                                <Skeleton style={{width: \"100%\", height: \"100px\"}} animation=\"wave\"/>\r\n                                <Skeleton style={{width: \"100%\", height: \"100px\"}} animation=\"wave\"/>\r\n                                <Skeleton style={{width: \"100%\", height: \"100px\"}} animation=\"wave\"/>\r\n                                <Skeleton style={{width: \"100%\", height: \"100px\"}} animation=\"wave\"/>\r\n                                <Skeleton style={{width: \"100%\", height: \"100px\"}} animation=\"wave\"/>\r\n                                <Skeleton style={{width: \"100%\", height: \"100px\"}} animation=\"wave\"/>\r\n                                <Skeleton style={{width: \"100%\", height: \"100px\"}} animation=\"wave\"/>\r\n                                <Skeleton style={{width: \"100%\", height: \"100px\"}} animation=\"wave\"/>\r\n                                <Skeleton style={{width: \"100%\", height: \"100px\"}} animation=\"wave\"/>\r\n                                <Skeleton style={{width: \"100%\", height: \"100px\"}} animation=\"wave\"/>\r\n                            </React.Fragment> :\r\n                        <div className=\"question-group\">\r\n                            {questions.map((e, i) => {\r\n                                return <Link key={i} to={`/free-help/question/${e._id}`}>\r\n                                    <div className=\"question\">\r\n                                        <div className=\"question-info\">\r\n                                            <span><small>Ответов: {e.answers.length}</small></span>\r\n                                            <span><small>Качество <br></br> вопроса: {e.rate}</small></span>\r\n                                            <span><small>Подписчиков: {e.subscribers.length}</small></span>\r\n                                        </div>\r\n                                        <div className=\"question-content\">\r\n                                            <div className=\"question-content-upper\">\r\n                                                <p>{e.title} - {e.index}</p>\r\n                                                {e.tags.map((e, i) => { return <Link><Button key={i}>{e}</Button></Link> })}\r\n                                            </div>\r\n                                            <span><small>Задан: {e.timestamp} пользователем <Link to=\"/\"><LinkUI>{e.creator}</LinkUI></Link></small></span>\r\n                                        </div>\r\n                                    </div>\r\n                                </Link>\r\n                            })}\r\n                        \r\n                        </div>\r\n                        }\r\n                        {loading || error ?\r\n                        <div style={{display: 'flex', justifyContent: 'center', width:\"100%\"}}>\r\n                            <Skeleton style={{margin: '0 1rem', borderRadius: '50%', height: '40px', width: '25px'}} animation=\"wave\"></Skeleton>\r\n                            <Skeleton style={{margin: '0 1rem', borderRadius: '50%', height: '40px', width: '25px'}} animation=\"wave\"></Skeleton>\r\n                            <Skeleton style={{margin: '0 1rem', borderRadius: '50%', height: '40px', width: '25px'}} animation=\"wave\"></Skeleton>\r\n                            <Skeleton style={{margin: '0 1rem', borderRadius: '50%', height: '40px', width: '25px'}} animation=\"wave\"></Skeleton>\r\n                        </div>\r\n                        :\r\n                        <div className=\"pagination\">\r\n                            <Pagination count={countPages} page={page} onChange={handleSelectPage} showFirstButton showLastButton />\r\n\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                    <div className=\"left-sidebar\">\r\n                        <div className=\"left-sidebar-content\">\r\n                            <h2>Не нашли ответ на волнующий вас вопрос? Спросите прямо сейчас.</h2><small>Пожалуйста, перед созданием вопроса, убедитесь, что схожего с вашим вопроса не существует. Наказания за создание копий вопросов не предусмотрены. Если такой вопрос уже имеется, то вы ненарочно засоряете сообщество. Так делать не надо :). При нарочном засорении сообщества предусмотрены наказания, описанные в <Link><LinkUI>соглашении</LinkUI></Link>.</small>\r\n                            <Link to=\"/add-question\">\r\n                                <Button variant=\"outlined\">\r\n                                    Задать вопрос\r\n                            </Button>\r\n                            </Link>\r\n                        </div>\r\n                        {loading || error?\r\n                        <div className=\"left-sidebar-content\">\r\n                            <h2>Выбрать теги для отображения:</h2>\r\n                            <br></br>\r\n                            <Skeleton animation=\"wave\" variant=\"rect\"></Skeleton>\r\n                            <Skeleton animation=\"wave\" variant=\"rect\"></Skeleton>\r\n                            <Skeleton animation=\"wave\" variant=\"rect\"></Skeleton>\r\n                            <Skeleton animation=\"wave\" variant=\"rect\"></Skeleton>\r\n                        </div>\r\n                        :\r\n                        <div className=\"left-sidebar-content\">\r\n                            \r\n                            <h2>Выбрать теги для отображения:</h2>\r\n                            <Button variant=\"outlined\" onClick={() => setTagsByUn(!tagsByUn)}>Выбрать по университету</Button>\r\n                            {tagsByUn ? selectTagsTypeByUniversity() : null}\r\n                            {universityState.BSUIR? tags.map((e,i) => <Button variant=\"outlined\" >{e.name}</Button>): ''}\r\n                            <Button variant=\"outlined\" >Выбрать по специализации</Button>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n\r\n}\r\n\r\nexport default FreeHelp;","import FreeHelp from './FreeHelp'\r\n\r\nexport default FreeHelp","import { Button } from '@material-ui/core';\r\nimport React, { Component, useEffect, useState } from 'react';\r\nimport Footer from '../../parts/Footer/Footer';\r\nimport Header from '../../parts/Header';\r\nimport Menu from '../../parts/Menu/Menu';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\nimport ReportOutlinedIcon from '@material-ui/icons/ReportOutlined';\r\nimport ReportIcon from '@material-ui/icons/Report';\r\nimport UndoIcon from '@material-ui/icons/Undo';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\nimport axios from 'axios'\r\n\r\nimport \"./UserProfile.scss\"\r\nimport Cookies from 'universal-cookie';\r\n\r\nfunction UserProfile(props) {\r\n    const [fav, setFav] = useState(false)\r\n    const [blocked, setBlocked] = useState(false)\r\n    const [reported, setReported] = useState(false)\r\n    let [data,setData] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3001/users/'+props.match.params.id)\r\n        .then(res => {\r\n            setTimeout(() => setData(res.data), 100)\r\n            \r\n        })\r\n    }, [])\r\n    return (\r\n        <div className=\"user-profile-page\">\r\n            <Header props={props}/>\r\n            <div className=\"main\">\r\n                <Menu />\r\n                <div style={{position: 'absolute', marginLeft: '280px', width: 'calc(100% - 280px)'}} className={`content loader${!data.userName ? \"\" : ' done'}`}>\r\n                    <span id='preloader'></span>\r\n                </div> \r\n                <div className=\"content\">\r\n                    <div className=\"content-user\">\r\n                        <img alt='Фото профиля' src='/6300581.png'></img>\r\n                        <div className=\"user-info\">\r\n                            <h2>{data.userName?data.userName + \" \" + data.userSurname:\"Загрузка...\"}</h2>\r\n                            <p>Профиль: {!data.userName? \"Загрузка...\" : (data.isPrivate ? 'приватный': 'открытый')}</p>\r\n                            <p>Студент из {!data.university ? \"Загрузка...\" : data.university}</p>\r\n                            <p>Теги: {!data.tags ? <Button>Загрузка...</Button> : (data.tags).map((e, i) => <Button key={i}>{e}</Button>)}</p>\r\n                            <p>Подтверждение профиля: {data.userName? data.isAuth? \"имеется\" : \"отсутствует\": \"Загрузка...\"}</p>\r\n                        </div>\r\n                        <div className=\"user-action\">\r\n                            {!fav ?\r\n                                <Button onClick={() => setFav(!fav)}><BookmarkBorderIcon style={{ marginRight: '1rem' }} />В избранные</Button> :\r\n                                <Button onClick={() => setFav(!fav)}><BookmarkIcon style={{ marginRight: '1rem' }} />В избранных</Button>}\r\n                            <Button><CreateIcon style={{ marginRight: '1rem' }} />Написать</Button>\r\n                            {!blocked ?\r\n                                <Button onClick={() => setBlocked(!blocked)}><BlockIcon style={{ marginRight: '1rem' }} />Заблокировать</Button> :\r\n                                <Button onClick={() => setBlocked(!blocked)}><UndoIcon style={{ marginRight: '1rem' }} />Разблокировать</Button>}\r\n                            {!reported ? \r\n                                <Button onClick={() => setReported(!reported)}><ReportOutlinedIcon style={{ marginRight: '1rem' }} />Пожаловаться</Button> :\r\n                                <Button onClick={() => setReported(!reported)}><ReportIcon style={{ marginRight: '1rem' }} />Отозвать жалобу</Button>}\r\n                        </div>\r\n                    </div>\r\n                    {data.isPrivate ? <p>Данные профиля недоступны</p> :\r\n                    <div className=\"content-user-activity\">\r\n                        <div className=\"user-answers-group\">\r\n                            <h3>Последние ответы пользователя</h3>\r\n                            <div className=\"user-answers\">\r\n                                {!data.answers ? <React.Fragment>\r\n                                    <div className=\"user-answer loading\"></div>\r\n                                    <div className=\"user-answer loading\"></div>\r\n                                    <div className=\"user-answer loading\"></div>\r\n                                </React.Fragment> :(data.answers).map((e, i) => \r\n                                    <div key={i} className=\"user-answer\"><p>{e}</p></div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user-questions-group\">\r\n                            <h3>Последние вопросы пользователя</h3>\r\n                            <div className=\"user-questions\">\r\n                            {!data.questions ? <React.Fragment>\r\n                                <div className=\"user-question loading\"></div>\r\n                                <div className=\"user-question loading\"></div>\r\n                                <div className=\"user-question loading\"></div>\r\n                                </React.Fragment> :(data.questions).map((e, i) => \r\n                                    <div key={i} className=\"user-answer\"><p>{e}</p></div>\r\n                                )}\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserProfile;","import UserProfile from './UserProfile'\r\n\r\nexport default UserProfile","import Menu from '../../parts/Menu/Menu'\r\nimport React from 'react'\r\nimport Footer from '../../parts/Footer/Footer'\r\nimport Header from '../../parts/Header'\r\n\r\nimport './News.scss'\r\n\r\nfunction News() {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n<div className='main'>\r\n<Menu/>\r\n            <div className='content'>\r\n\r\n            </div>\r\n</div>\r\n            \r\n            <Footer/>\r\n            <h2>News</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News\r\n","import News from './News'\r\n\r\nexport default News\r\n","import Menu from '../../parts/Menu/Menu'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport Footer from '../../parts/Footer/Footer'\r\nimport Header from '../../parts/Header'\r\nimport './FreeQuestion.scss'\r\nimport { Link } from 'react-router-dom'\r\nimport { Avatar, Button, Checkbox, FormControlLabel, IconButton } from '@material-ui/core'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\r\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined';\r\nimport ThumbDownAltOutlinedIcon from '@material-ui/icons/ThumbDownAltOutlined';\r\nimport ReportOutlinedIcon from '@material-ui/icons/ReportOutlined';\r\nimport ReportIcon from '@material-ui/icons/Report';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport GradeIcon from '@material-ui/icons/Grade';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { detailsQuestion } from '../../../actions/questionActions'\r\n\r\n\r\nfunction FreeQuestion(props) {\r\n    const [favorite, setFavorite] = useState(false);\r\n    const [good, setGood] = useState(false);\r\n    const [bad, setBad] = useState(false);\r\n    const [report, setReport] = useState(false);\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    const questionDetails = useSelector(state => state.questionDetails);\r\n    const {question, loading, error} = questionDetails;\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n        dispatch(detailsQuestion(props.match.params.id))\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n\r\n    console.log(question)\r\n    const tags = ['высшая математика', 'интегралы', 'теорема Дирихле', 'БГУИР', 'определенные интегралы']\r\n\r\n    return (\r\n        <div className='free-question'>\r\n            <Header/>\r\n            <div className=\"main\">\r\n                <Menu />\r\n                <div className=\"content\">\r\n                    <div className=\"question-info\">\r\n                        <div className=\"question-info-upper\">\r\n                        {loading? <h1>loading...</h1>: error? <h1>{error}</h1> : <h1>{question.title}</h1>}\r\n                        <span><small>Не нашли ответ на свой вопрос?</small> <Button>Задать вопрос</Button></span>\r\n                        </div>\r\n                        <div className=\"question-info-bottom\">\r\n                        <p>Вопрос задан 10.02.20 пользователем <div className=\"user\"><Link to='/profile/1'><Avatar src='https://avatars.githubusercontent.com/u/6300581?v=4'/>Евдоким Кик</Link></div></p>\r\n                        </div>\r\n                        \r\n                        <hr></hr>\r\n                    </div>\r\n                    <div className=\"question-content\">\r\n                        <div className=\"question\">\r\n                        <p>Я не могу их решить, помогите, пожалуйста!!!!</p>\r\n                        <img src=\"https://s1.1zoom.ru/big0/52/Love_Sunrises_and_sunsets_Fingers_Hands_Heart_Sun_532758_1280x897.jpg\" alt=\"\"/>\r\n                        </div>\r\n                        <div className=\"question-action\">\r\n                            <IconButton onClick={() => setFavorite(!favorite)}>{favorite ? <FavoriteIcon/> : <FavoriteBorderIcon/> }</IconButton>\r\n                            <IconButton onClick={() => {setGood(!good); bad? setBad(!bad) : setBad(bad)}}>{good ? <ThumbUpAltIcon/> : <ThumbUpAltOutlinedIcon/>}</IconButton>\r\n                            <IconButton onClick={() => {setBad(!bad); good ? setGood(!good) : setGood(good)}}>{bad ? <ThumbDownIcon/> : <ThumbDownAltOutlinedIcon/>}</IconButton>\r\n                            <IconButton onClick={() => setReport(!report)}>{report ? <ReportIcon/> : <ReportOutlinedIcon/>}</IconButton>\r\n                        </div>\r\n                        <hr></hr>\r\n                    </div>\r\n                    <h2>Ответы на вопрос:</h2>\r\n                    <br></br>\r\n                    <div className=\"question-answers\">\r\n                        \r\n                        <div className=\"answer\">\r\n                            <div className=\"answer-action\">\r\n                            <IconButton onClick={() => setFavorite(!favorite)}>{favorite ? <GradeIcon/> : <StarBorderIcon/> }</IconButton>\r\n                            <IconButton onClick={() => {setGood(!good); bad? setBad(!bad) : setBad(bad)}}>{good ? <ThumbUpAltIcon/> : <ThumbUpAltOutlinedIcon/>}</IconButton>\r\n                            <IconButton onClick={() => {setBad(!bad); good ? setGood(!good) : setGood(good)}}>{bad ? <ThumbDownIcon/> : <ThumbDownAltOutlinedIcon/>}</IconButton>\r\n                            <IconButton onClick={() => setReport(!report)}>{report ? <ReportIcon/> : <ReportOutlinedIcon/>}</IconButton>\r\n                        \r\n                            </div>\r\n                            <div className=\"answer-part\">\r\n                            <div className=\"answer-rating\">\r\n                            <DoneIcon/> <small>Этот ответ мы посчитали решением</small>\r\n            \r\n                            </div>\r\n                            <div className=\"answer-content\">\r\n                                <p>Вот моё решение этого примера, но оно может быть неправильным, потому что я сам плохо понимаю эту тему</p>\r\n                                <img src=\"https://s1.1zoom.ru/big0/52/Love_Sunrises_and_sunsets_Fingers_Hands_Heart_Sun_532758_1280x897.jpg\" alt=\"\"/>\r\n                                <img src=\"https://s1.1zoom.ru/big0/52/Love_Sunrises_and_sunsets_Fingers_Hands_Heart_Sun_532758_1280x897.jpg\" alt=\"\"/>\r\n                                <img src=\"https://s1.1zoom.ru/big0/52/Love_Sunrises_and_sunsets_Fingers_Hands_Heart_Sun_532758_1280x897.jpg\" alt=\"\"/>\r\n\r\n                            </div>\r\n                            <div className=\"answer-person\">\r\n                                На этот вопрос ответил <Button><Link to={'/profile/1'}>Евдоким Кик</Link></Button> 20.10.2021\r\n                            </div>\r\n                            <small>Помогите нам, пожалуйста! Этот ответ верный? <Button>Да</Button>/<Button>Нет</Button></small> \r\n                        </div>\r\n                        </div>\r\n                        <hr></hr>\r\n                        <div className=\"answer\">\r\n                            <div className=\"answer-action\">\r\n                            <IconButton onClick={() => setFavorite(!favorite)}>{favorite ? <GradeIcon/> : <StarBorderIcon/> }</IconButton>\r\n                            <IconButton onClick={() => {setGood(!good); bad? setBad(!bad) : setBad(bad)}}>{good ? <ThumbUpAltIcon/> : <ThumbUpAltOutlinedIcon/>}</IconButton>\r\n                            <IconButton onClick={() => {setBad(!bad); good ? setGood(!good) : setGood(good)}}>{bad ? <ThumbDownIcon/> : <ThumbDownAltOutlinedIcon/>}</IconButton>\r\n                            <IconButton onClick={() => setReport(!report)}>{report ? <ReportIcon/> : <ReportOutlinedIcon/>}</IconButton>\r\n                        \r\n                            </div>\r\n                            <div className=\"answer-part\">\r\n                            <div className=\"answer-rating\">\r\n                            <DoneIcon/> <small>Этот ответ мы посчитали решением</small>\r\n            \r\n                            </div>\r\n                            <div className=\"answer-content\">\r\n                                <p>Вот моё решение этого примера, но оно может быть неправильным, потому что я сам плохо понимаю эту тему</p>\r\n                                <img src=\"https://s1.1zoom.ru/big0/52/Love_Sunrises_and_sunsets_Fingers_Hands_Heart_Sun_532758_1280x897.jpg\" alt=\"\"/>\r\n                                <img src=\"https://s1.1zoom.ru/big0/52/Love_Sunrises_and_sunsets_Fingers_Hands_Heart_Sun_532758_1280x897.jpg\" alt=\"\"/>\r\n                                <img src=\"https://s1.1zoom.ru/big0/52/Love_Sunrises_and_sunsets_Fingers_Hands_Heart_Sun_532758_1280x897.jpg\" alt=\"\"/>\r\n\r\n                            </div>\r\n                            <div className=\"answer-person\">\r\n                                На этот вопрос ответил <Button><Link to={'/users/profile/1'}>Евдоким Кик</Link></Button> 20.10.2021\r\n                            </div>\r\n                            <small>Помогите нам, пожалуйста! Этот ответ верный? <Button>Да</Button>/<Button>Нет</Button></small> \r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    \r\n                    <div className=\"question-tags\">\r\n                    <hr></hr>\r\n                        Этот вопрос содержит теги:\r\n                        {tags.map((e,i) => {\r\n                            if (tags.length-1 == i) {\r\n                                return <React.Fragment key={`${i}__${e}`}><Button>{e}</Button></React.Fragment>}\r\n                            else return <React.Fragment key={`${i}__${e}`}><Button>{e}</Button>,</React.Fragment>\r\n                        })}\r\n                    <hr></hr>\r\n                    </div>\r\n                    \r\n                    <div className=\"add-answer\">\r\n                        <h1>Добавить ответ</h1>\r\n                        <small>Если вы считаете, что этот вопрос нуждается в решении, то, пожалуйста, помогите нам на него ответить</small>\r\n\r\n                        <form>\r\n                        <textarea rows='20'></textarea>\r\n                        </form>\r\n                        <div className=\"agreement\">\r\n                            <FormControlLabel control={<Checkbox onChange={() => setChecked(!checked)}></Checkbox>} label='Подтверждая, вы соглашаетесь с правилами сообщества'></FormControlLabel>\r\n                            {checked ? <Button>Отправить</Button> : <Button onClick={() => console.log(1)}  disabled>Подтвердите условия, чтобы отправить</Button>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FreeQuestion\r\n","import { Avatar, Button, FormControlLabel, FormGroup, Switch, Tooltip } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Footer from '../../parts/Footer/Footer'\r\nimport Header from '../../parts/Header'\r\nimport Menu from '../../parts/Menu/Menu'\r\nimport './Settings.scss'\r\n\r\nfunction Settings() {\r\n    let a = localStorage.getItem(\"checked\")\r\n    let b = localStorage.getItem('private')\r\n    console.log(JSON.parse(a))\r\n    const [checked, setChecked] = useState(JSON.parse(a) || false)\r\n\r\n    // useEffect(setChecked(!!(localStorage.getItem(\"checked\"))))\r\n\r\n\r\n    const toggleChecked = () => {\r\n        setChecked(!checked)\r\n        localStorage.setItem(\"checked\", !checked)\r\n    }\r\n\r\n    return (\r\n        <div className='settings'>\r\n            <Header />\r\n            <div className=\"main\">\r\n                <Menu />\r\n                <div className=\"content\">\r\n                    <div className=\"settings-left\">\r\n                        <h1>Основные настройки</h1>\r\n\r\n                        <div id='line'>\r\n                            <Tooltip disableFocusListener arrow title=\"Изменить цвет темы со светлой на тёмную и наоборот\">\r\n                                <span>Изменить тему</span>\r\n                            </Tooltip>\r\n                            <FormControlLabel\r\n                                control={<Switch size=\"medium\" checked={checked} onChange={toggleChecked} />}\r\n                            />\r\n                        </div>\r\n                        <div id='line'>\r\n                            <Tooltip disableFocusListener arrow title=\"Изменить динамический поиск на статический и наоборотС\">\r\n                                <span>Выключить выезжающий поиск</span>\r\n                            </Tooltip>\r\n                            <FormControlLabel\r\n                                control={<Switch size=\"medium\" checked={checked} onChange={toggleChecked} />}\r\n                            />\r\n                        </div>\r\n                        <div id='line'>\r\n                            <Tooltip disableFocusListener arrow title=\"Включить или выключить звук уведомлений\">\r\n                                <span>Отключить звук уведомлений</span>\r\n                            </Tooltip>\r\n                            <FormControlLabel\r\n                                control={<Switch size=\"medium\" checked={checked} onChange={toggleChecked} />}\r\n                            />\r\n                        </div>\r\n                        <div id='line'>\r\n                            <Tooltip disableFocusListener arrow title=\"Изменить цвет темы со светлой на тёмную и наоборот\">\r\n                                <span>Изменить тему</span>\r\n                            </Tooltip>\r\n                            <FormControlLabel\r\n                                control={<Switch size=\"medium\" checked={checked} onChange={toggleChecked} />}\r\n                            />\r\n                        </div>\r\n                        <div id='line'>\r\n                            <Tooltip disableFocusListener arrow title=\"Изменить цвет темы со светлой на тёмную и наоборот\">\r\n                                <span>Изменить тему</span>\r\n                            </Tooltip>\r\n                            <FormControlLabel\r\n                                control={<Switch size=\"medium\" checked={checked} onChange={toggleChecked} />}\r\n                            />\r\n                        </div>\r\n                        <hr></hr>\r\n                        <h1>Настройки профиля</h1>\r\n                        <div id='line'>\r\n                            <div className=\"\">\r\n                                <Avatar style={{ width: '100px', height: '100px', margin: '1rem 0' }} src='https://avatars.githubusercontent.com/u/6300581?v=4'></Avatar>\r\n                                <Tooltip disableFocusListener arrow title=\"Изменить фотографию профиля на любую угодную вам\">\r\n                                    <span>Изменить фотографию профиля</span>\r\n                                </Tooltip>\r\n                            </div>\r\n                            <Button>Изменить</Button>\r\n                        </div>\r\n                        <div id='line'>\r\n                            <Tooltip disableFocusListener arrow title=\"За смену имени взымается плата в количестве 10 бонусов\">\r\n                                <span>Изменить имя. Сейчас: Евдоким Кик</span>\r\n                            </Tooltip>\r\n                            <Button>Изменить</Button>\r\n                        </div>\r\n                        <div id='line'>\r\n                            <Tooltip disableFocusListener arrow title=\"За смену имени взымается плата в количестве 10 бонусов\">\r\n                                <span>Изменить учебное заведение. Сейчас: БГУИР</span>\r\n                            </Tooltip>\r\n                            <Button>Изменить</Button>\r\n                        </div>\r\n                        <div id='line'>\r\n                            <Tooltip disableFocusListener arrow title=\"За смену имени взымается плата в количестве 10 бонусов\">\r\n                                <span>Изменить теги. (Максимум: 5) Сейчас: программирование, математика, экономика</span>\r\n                            </Tooltip>\r\n                            <Button>Изменить</Button>\r\n                        </div>\r\n                        <div id='line'>\r\n                            <Tooltip disableFocusListener arrow title={`После нажатия на \"Экспортировать\", введенные вами настройки станут доступы на любом вашем устройстве`}>\r\n                                <span>Экспортировать настройки</span>\r\n                            </Tooltip>\r\n                            <Button>Экспортировать</Button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className=\"settings-right\">\r\n                        <h1>Настройки приватности</h1>\r\n                        <div id='line'>\r\n                            <Tooltip disableFocusListener arrow title=\"При изменении приватности профиля будут скрыты только ваши ответы и вопросы\">\r\n                                <span>Изменить приватность профиля</span>\r\n                            </Tooltip>\r\n                            <FormControlLabel\r\n                                control={<Switch size=\"medium\" checked={checked} onChange={toggleChecked} />}\r\n                            />\r\n                        </div>\r\n                        <div id='line'>\r\n                            <Tooltip disableFocusListener arrow title=\"При изменении этого параметра, пользователи, не находящиеся в вашем списке избранных, не имеют возможности писать вам\">\r\n                                <span>Запретить личные сообщения не от избранных</span>\r\n                            </Tooltip>\r\n                            <FormControlLabel\r\n                                control={<Switch size=\"medium\" checked={checked} onChange={toggleChecked} />}\r\n                            />\r\n                        </div>\r\n                        <div id='line'>\r\n                            <Tooltip disableFocusListener arrow title=\"Использование телефона даёт возможность иметь вам более безопасный аккаунт. Также у вас будет звание подтвержденного аккаунта на странице профиля. Телефон никому не распространяется и стразу шифруется. Доступ к нему не имеет даже администратор сайта. Это лишь проверка вашей идентичности\">\r\n                                <span>Привязать телефон</span>\r\n                            </Tooltip>\r\n                            <Button>Привязать</Button>\r\n                        </div>\r\n                        <div id='line'>\r\n                            <Tooltip disableFocusListener arrow title=\"Если вам удобнее использовать телефон для авторизации - пожалуйста\">\r\n                                <span>Изменить логин с почты на номер телефона</span>\r\n                            </Tooltip>\r\n                            <FormControlLabel\r\n                                control={<Switch disabled size=\"medium\" checked={checked} onChange={toggleChecked} />}\r\n                            />\r\n                        </div>\r\n                        <div id='line'>\r\n                            <Tooltip disableFocusListener arrow title=\"За смену имени взымается плата в количестве 10 бонусов\">\r\n                                <span>Изменить пароль</span>\r\n                            </Tooltip>\r\n                            <Button>Изменить</Button>\r\n                        </div>\r\n                        <div id='line'>\r\n                            <Tooltip disableFocusListener arrow title=\"За смену имени взымается плата в количестве 10 бонусов\">\r\n                                <span>Выйти из профиля</span>\r\n                            </Tooltip>\r\n                            <Button>Выйти</Button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings\r\n","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch, withRouter} from 'react-router-dom'\nimport Login from './components/pages/Login/'\nimport Index from './components/pages/Index/Index.jsx'\nimport RegisterPage from './components/pages/Register/'\nimport FreeHelp from './components/pages/FreeHelp'\nimport UserProfile from './components/pages/UserProfile';\nimport News from './components/pages/News';\nimport FreeQuestion from './components/pages/FreeQuestion/FreeQuestion';\nimport Settings from './components/pages/Settings/Settings';\nimport { createBrowserHistory } from \"history\";\nimport { useSelector } from 'react-redux';\n\nfunction App(props) {\n  \n  const customHistory = createBrowserHistory();\n  return (\n    <Router history={customHistory}>\n        <Switch>\n          <Route path=\"/login\" props={customHistory} component={Login}  />\n          <Route exact path='/' component={Index} />\n          <Route path='/register' component={RegisterPage} />\n          <Route path='/free-help' exact component={FreeHelp} />\n          <Route path='/profile/:id' props={customHistory} component={UserProfile} />\n          <Route path='/news' component={News} />\n          <Route path='/free-help/question/:id' component={FreeQuestion} />\n          <Route path='/settings' component={Settings}/>\n        </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const { LOGIN_USER_SUCCESS, LOGIN_USER_FAIL, LOGIN_USER_REQUEST } = require(\"../costants/userConst\");\r\n\r\nfunction loginUserReducer(state = {}, action ) {\r\n    switch (action.type) {\r\n        case LOGIN_USER_REQUEST:\r\n            return {loading: true}\r\n        case LOGIN_USER_SUCCESS:\r\n            return {loading: false, userInfo: action.payload}\r\n        case LOGIN_USER_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        default : return state\r\n    }\r\n}\r\n\r\nexport {loginUserReducer}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux'\r\nimport { questionDetailsReducer, questionListReducer } from './reducers/questionReducers'\r\nimport {loginUserReducer} from './reducers/userReducers'\r\nimport thunk from 'redux-thunk'\r\nimport Cookie from 'js-cookie'\r\n\r\nconst userInfo = Cookie.getJSON(\"userInfo\") || null\r\nconsole.log(userInfo)\r\n\r\nconst initialState = { userLogin : {userInfo}}\r\nconst reducer = combineReducers({\r\n    questionList: questionListReducer,\r\n    questionDetails: questionDetailsReducer,\r\n    userLogin: loginUserReducer\r\n})\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)))\r\n\r\nexport default store","import { QUESTION_DETAILS_FAIL, QUESTION_DETAILS_REQUEST, QUESTION_DETAILS_SUCCESS, QUESTION_LIST_FAIL, QUESTION_LIST_REQUEST, QUESTION_LIST_SUCCESS } from \"../costants/questionConst\"\r\n\r\nfunction questionListReducer(state = {questions: [], count: 0}, action) {\r\n    switch (action.type) {\r\n        case QUESTION_LIST_REQUEST:\r\n            return {loading: true}\r\n        case QUESTION_LIST_SUCCESS: \r\n            return {loading: false, questions: action.payload.questions, count: action.payload.count, tags: action.payload.tags}\r\n        case QUESTION_LIST_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nfunction questionDetailsReducer(state = {question: {}}, action) {\r\n    switch (action.type) {\r\n        case QUESTION_DETAILS_REQUEST:\r\n            return {loading: true}\r\n        case QUESTION_DETAILS_SUCCESS: \r\n            return {loading: false, question: action.payload}\r\n        case QUESTION_DETAILS_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport {questionListReducer, questionDetailsReducer}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","export const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS'\r\nexport const LOGIN_USER_FAIL = 'LOGIN_USER_FAIL'\r\nexport const LOGIN_USER_REQUEST = 'LOGIN_USER_REQUEST'"],"sourceRoot":""}